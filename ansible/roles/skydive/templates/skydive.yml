# Skydive config file

# host_id is used to reference the agent by default set to hostname
host_id:

# WebSocket Ping/Pong timeout in second
ws_pong_timeout: 5

cache:
  # expiration time in second
  expire: 300

  # cleanup interval in second
  cleanup: 30

openstack:
  auth_url: http://xxx.xxx.xxx.xxx:5000/v2.0
  username: admin
  password: password123
  tenant_name: admin
  region_name: RegionOne

# Sets up the analyzer UI on the sensu-api-uchiwa server
analyzer:
  # address and port for the analyzer API, Format: addr:port.
  # Default addr is 127.0.0.1
  listen: 0.0.0.0:8082
  #listen: {{ groups['skydive'][0] }}:8082
  flowtable_expire: 600
  flowtable_update: 60
  flowtable_agent_ratio: 0.5
  # Flow storage engine
  # Available: elasticsearch, orientdb
  # storage: elasticsearch

# Agents will point to the analyzer setup in the sensu-api-uchiwa server
agent:
  # address and port for the agent API, Format: addr:port.
  # Default addr is 127.0.0.1
  listen: 8081
  analyzers: <ipaddr of analyzer host>:8082
  # The 'analyzer_username' and 'analyzer_password' parameters are
  # used by the agent to authenticate against the analyzer
  analyzer_username: admin
  analyzer_password: password
  topology:
    # Probes used to capture topology informations like interfaces,
    # bridges, namespaces, etc...
    # Available: netlink, netns, ovsdb, docker, neutron.
    # Default: netlink, netns
    probes:
      - netlink
      - netns
      - ovsdb
      # - docker
      # - neutron
  flow:
    # Probes used to capture traffic.
    probes:
      # - ovssflow
      # - pcap
  metadata:
    info: This is compute node

sflow:
  # Default listening address is 127.0.0.1
  # bind_address: 127.0.0.1

  # Port min/max used when starting a sflow probe, a agent will be started
  # with a port from this range
  # port_min: 6345
  # port_max: 6355

ovs:
  # ovsdb connection, Format supported :
  # * addr:port
  # * tcp://addr:port
  # * unix:///var/run/openvswitch/db.sock
  # If you use the tcp connection you need to authorize connexion to ovsdb agent
  # at least locally
  # % sudo ovs-appctl -t ovsdb-server ovsdb-server/add-remote ptcp:6400:127.0.0.1
  # ovsdb: unix:///var/run/openvswitch/db.sock

docker:
  # url: unix:///var/run/docker.sock

netns:
  # allow to specify where the netns probe is watching network namespace
  # run_path: /var/run/netns

# Uses the elasticsearch database present in the Logmet ELK server
storage:
  elasticsearch: <ip address of analyzer host>:9200
  #elasticsearch: {{ groups['skydive'][0] }}:9200

graph:
  # graph backend memory, titangraph, gremlin(generic gremlin based), orientdb
  backend: memory
  # gremlin endpoint, ex ws://127.0.0.1:8182, http://127.0.0.1:8182/graph
  gremlin: ws://127.0.0.1:8182

logging:
  default: INFO
  topology/probes: INFO
  topology/graph: WARNING

auth:
  # specify the type of authentication mechanism: noauth, basic, keystone (default: noauth)
  # type: basic
    # basic:
      # file: /etc/skydive/htpasswd

etcd:
  # when 'embedded' is set to true, the analyzer will start an embedded etcd server
  # embedded: true

  # both the analyzers and the agents make use of etcd
  # servers:
  #   - http://127.0.0.1:2379

# OrientDB connection informations
# orientdb:
#  addr: http://127.0.0.1:2480
#  database: Skydive
#  username: root
#  password: hello
